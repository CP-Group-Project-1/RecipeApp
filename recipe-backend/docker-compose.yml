services:
  api:
    build: .
    depends_on:
      #- db
      db:
        condition: service_healthy
    # Working directory inside container
    ports:
      #Map port inside container to port 8000 on host
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000 # Run the server
    working_dir: /src/recipe_app_project  # Needed to run BackEnd seperately for DRF webserver.
    volumes:
      # Allows for syncing files for updating during development
      - .:/src
  db:
    image: 'postgres:15'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=recipe_app_db
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  postgres_data: